import { danger } from "danger"
import { makeExecutableSchema } from "graphql-tools"

// This extends the schema objects generated by graphql-js
import "graphql-schema-utils"

const org = "artsy"
const graphQLFile = "_schema.graphql"

// To grab all files that match the original RFC
// https://github.com/search?q=org%3Aartsy+filename%3A_schema.graphql+path%3A%2F+language%3AGraphQL&type=Code
//
const queryForGraphQLFiles = `org:${org} filename:${graphQLFile} path:/ language:GraphQL`
const api = danger.github.api

export default async () => {
  const searchResponse = await api.search.issues({ q: queryForGraphQLFiles })
  console.log(searchResponse)
  console.log(`Found ${searchResponse.data.items} repos`)
  const reposWithSchema: string[] = searchResponse.data.items.map((i: any) => i.repository.name)

  reposWithSchema.forEach(async repoName => {
    const now = new Date()
    now.setDate(now.getDate() - 7)
    const weekAgoISO = now.toISOString()

    // Grab the commits that are on the graphql schema in the last week, so we can get the last
    // if there's over 100 commits _to the schema_ in a week, I'd be impressed
    const commitsSinceLastWeek = await api.repos.getCommits({
      owner: org,
      repo: repoName,
      per_page: 100,
      path: graphQLFile,
      until: weekAgoISO,
    })

    const commitLength = commitsSinceLastWeek.data.length
    if (!commitLength) {
      console.log(`Skipping GraphQL diff for ${org}/${repoName}, due to no activity.`)
      return
    }

    const lastCommit = commitsSinceLastWeek.data[commitLength - 1]
    console.log(`Looking at the difference between master and ${lastCommit.sha} for ${org}/${repoName}`)

    const masterSDL = await danger.github.utils.fileContents("_schema.graphql", `${org}/${repoName}`)
    const oldSDL = await danger.github.utils.fileContents("_schema.graphql", `${org}/${repoName}`, lastCommit.sha)

    if (!oldSDL) {
      console.log(`No _schema.graphql found back in ${lastCommit.sha}`)
      return
    }

    const masterSchema = makeExecutableSchema({ typeDefs: masterSDL })
    const oldSchema = makeExecutableSchema({ typeDefs: oldSDL })

    const diffs = oldSchema.diff(masterSchema)
    console.log(">>>>")
    console.log(diffs)
  })
}
